{
	"info": {
		"_postman_id": "40beb5de-6553-455e-8e46-33ee69eaeca1",
		"name": "FFME2-16  Dashboard users login ",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Positive",
			"item": [
				{
					"name": "FFME2-16  Dashboard User (Techserve4u/Company admin) login in admin panel",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2f1404b5-0e74-442d-97b5-32d2d1156f26",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"Dashboard auth_token\", jsonData.auth_token);",
									"",
									"",
									"var schema = {",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"auth_token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2MDA4MzEwMTIsImlhdCI6MTYwMDgyNzQxMiwic3ViIjozNDksInVzZXJfdHlwZSI6IkRhc2hib2FyZCIsIm5hbWUiOiJBbGVhaGEga2hhbiIsImVtYWlsIjoiQWxlYWhhMkBlbWFpbC5jb20iLCJtZW1iZXJfdHlwZSI6NTEsImNvbXBhbnlfaWQiOjE3OSwiZGVzaWduYXRpb24iOm51bGwsImRlcGFydG1lbnQiOm51bGx9.xTzYhYW0yj9Uo_2H-FpxgsC0WwLSOsJrPgVkvensmq8\",",
									"            \"message\": \"Successfully logged in.\",",
									"            \"status\": \"success\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"auth_token\",",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"auth_token\": {",
									"            \"$id\": \"#/properties/auth_token\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The auth_token schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2MDA4MzEwMTIsImlhdCI6MTYwMDgyNzQxMiwic3ViIjozNDksInVzZXJfdHlwZSI6IkRhc2hib2FyZCIsIm5hbWUiOiJBbGVhaGEga2hhbiIsImVtYWlsIjoiQWxlYWhhMkBlbWFpbC5jb20iLCJtZW1iZXJfdHlwZSI6NTEsImNvbXBhbnlfaWQiOjE3OSwiZGVzaWduYXRpb24iOm51bGwsImRlcGFydG1lbnQiOm51bGx9.xTzYhYW0yj9Uo_2H-FpxgsC0WwLSOsJrPgVkvensmq8\"",
									"            ]",
									"        },",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"Successfully logged in.\"",
									"            ]",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"success\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n \"email\": \"Aleaha2@email.com\",\n \"password\": \"1asdf234\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/dashboard-user-login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"dashboard-user-login"
							]
						},
						"description": "Objective: Dashboard User (Techserve4u/Company admin) login in admin panel so that they can access the service.\n\nSE: Shiblu Ahmed\nPO: Pranto Majumder\nQA: Abidur Aleaha khan\nReviewer:Pranto Majumder\n\nTest Steps: Test steps includes the following payload as a json format in body\n\nMethod: POST\n{\n \"email\": \"Aleaha2@email.com\",\n \"password\": \"1asdf234\"\n\n}\nExpected Result:\n{\n    \"auth_token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2MDA2MzU4MTYsImlhdCI6MTYwMDYzMjIxNiwic3ViIjozNDksInVzZXJfdHlwZSI6IkRhc2hib2FyZCIsIm5hbWUiOiJBbGVhaGEga2hhbiIsImVtYWlsIjoiQWxlYWhhMkBlbWFpbC5jb20iLCJtZW1iZXJfdHlwZSI6NTEsImNvbXBhbnlfaWQiOjE3OSwiZGVzaWduYXRpb24iOm51bGwsImRlcGFydG1lbnQiOm51bGx9.5Qv_HyWG-KOHEHDwqhgof1Yc4D9V9jYDqUKgBv2YfdU\",\n    \"message\": \"Successfully logged in.\",\n    \"status\": \"success\"\n}\nActual Result:\n{\n    \"auth_token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2MDA2MzU4MTYsImlhdCI6MTYwMDYzMjIxNiwic3ViIjozNDksInVzZXJfdHlwZSI6IkRhc2hib2FyZCIsIm5hbWUiOiJBbGVhaGEga2hhbiIsImVtYWlsIjoiQWxlYWhhMkBlbWFpbC5jb20iLCJtZW1iZXJfdHlwZSI6NTEsImNvbXBhbnlfaWQiOjE3OSwiZGVzaWduYXRpb24iOm51bGwsImRlcGFydG1lbnQiOm51bGx9.5Qv_HyWG-KOHEHDwqhgof1Yc4D9V9jYDqUKgBv2YfdU\",\n    \"message\": \"Successfully logged in.\",\n    \"status\": \"success\"\n}\nStatus Code: 200 ok"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Negative",
			"item": [
				{
					"name": "FFME2-14 -1 Register app users without phone number",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0b377a9b-71b4-45df-8d68-1b323808e2ac",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": \"Phone Number already exists. Please Log in.\",",
									"            \"status\": \"fail\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"Phone Number already exists. Please Log in.\"",
									"            ]",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"fail\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"5867331339\",\n\n\"company_id\": 179,\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Aleaha2\",\n\n\"last_name\":\"khan\",\n\n\"nid\":\"9874628364729374\",\n\n\"designation\":\"QA Guy\",\n\n\"department\":\"Tech\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" phone info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"\",\n\"company_id\": 179,\n\"iso_code\": \"US\",\n\"first_name\":\"Aleaha2\",\n\"last_name\":\"khan\",\n\"nid\":\"9874628364729374\",\n\"designation\":\"QA Guy\",\n\"department\":\"Tech\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"phone_number must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"phone_number must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -2 Register app users without compant id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c846347f-d589-466f-9f38-5ff7e29f574d",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"company_id must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"company_id must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"company_id must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"5867331339\",\n\n\"company_id\": \"\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Aleaha2\",\n\n\"last_name\":\"khan\",\n\n\"nid\":\"9874628364729374\",\n\n\"designation\":\"QA Guy\",\n\n\"department\":\"Tech\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" company_id info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"5867331339\",\n\"company_id\": \"\",\n\"iso_code\": \"US\",\n\"first_name\":\"Aleaha2\",\n\"last_name\":\"khan\",\n\"nid\":\"9874628364729374\",\n\"designation\":\"QA Guy\",\n\"department\":\"Tech\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"company_id must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"company_id must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -3 Register app users without iso_code",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e62af7cd-0670-4785-87cb-969f428802d3",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"company_id must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"company_id must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"company_id must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"5867331339\",\n\n\"company_id\": \"\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Aleaha2\",\n\n\"last_name\":\"khan\",\n\n\"nid\":\"9874628364729374\",\n\n\"designation\":\"QA Guy\",\n\n\"department\":\"Tech\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" iso_code info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"5867331339\",\n\"company_id\": 179,\n\"iso_code\": \"\",\n\"first_name\":\"Aleaha2\",\n\"last_name\":\"khan\",\n\"nid\":\"9874628364729374\",\n\"designation\":\"QA Guy\",\n\"department\":\"Tech\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"iso_code must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"iso_code must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -4 Register app users without firstname",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d2ce2b00-3b19-46b1-b412-458dc0369965",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"first_name must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"first_name must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"first_name must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"5867331339\",\n\n\"company_id\": 179,\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"\",\n\n\"last_name\":\"khan\",\n\n\"nid\":\"9874628364729374\",\n\n\"designation\":\"QA Guy\",\n\n\"department\":\"Tech\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" firstname info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"5867331339\",\n\"company_id\": 179,\n\"iso_code\": \"US\",\n\"first_name\":\"\",\n\"last_name\":\"khan\",\n\"nid\":\"9874628364729374\",\n\"designation\":\"QA Guy\",\n\"department\":\"Tech\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"firstname must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"firstname must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -5 Register app users without lastname",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d053b2a4-b9f5-46f9-aa17-3c8fa49d8a75",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"last_name must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"last_name must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"last_name must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"5867331339\",\n\n\"company_id\": 179,\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Aleaha2\",\n\n\"last_name\":\"\",\n\n\"nid\":\"9874628364729374\",\n\n\"designation\":\"QA Guy\",\n\n\"department\":\"Tech\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" lastname info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"5867331339\",\n\"company_id\": 179,\n\"iso_code\": \"US\",\n\"first_name\":\"Aleaha2\",\n\"last_name\":\"\",\n\"nid\":\"9874628364729374\",\n\"designation\":\"QA Guy\",\n\"department\":\"Tech\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"lastname must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"lastname must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -6 Register app users without designation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c611d782-349a-438b-8c78-1ab49e4732af",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"last_name must be non-empty\",",
									"                \"designation must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"last_name must be non-empty\",",
									"                    \"designation must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"last_name must be non-empty\",",
									"                            \"designation must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"5867331339\",\n\n\"company_id\": 179,\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Aleaha2\",\n\n\"last_name\":\"\",\n\n\"nid\":\"9874628364729374\",\n\n\"designation\":\"\",\n\n\"department\":\"Tech\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" designation info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"5867331339\",\n\"company_id\": 179,\n\"iso_code\": \"US\",\n\"first_name\":\"Aleaha2\",\n\"last_name\":\"khan\",\n\"nid\":\"9874628364729374\",\n\"designation\":\"\",\n\"department\":\"Tech\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"designation must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"designation must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -7 Register app users without department",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c7ea6836-d182-4235-ab76-328cc04bd423",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"department must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"department must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"department must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"5867331339\",\n\n\"company_id\": 179,\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Aleaha2\",\n\n\"last_name\":\"khan\",\n\n\"nid\":\"9874628364729374\",\n\n\"designation\":\"QA Guy\",\n\n\"department\":\"\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" department info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"5867331339\",\n\"company_id\": 179,\n\"iso_code\": \"US\",\n\"first_name\":\"Aleaha2\",\n\"last_name\":\"khan\",\n\"nid\":\"9874628364729374\",\n\"designation\":\"QA Guy\",\n\"department\":\"\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"department must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"department must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -8 Register app users without nid ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3cdf4555-0ac7-4ee6-8b3d-4c43e70c5820",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"nid must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"nid must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"nid must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"5867331339\",\n\n\"company_id\": 179,\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Aleaha2\",\n\n\"last_name\":\"khan\",\n\n\"nid\":\"\",\n\n\"designation\":\"QA Guy\",\n\n\"department\":\"Tech\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" nid info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"5867331339\",\n\"company_id\": 179,\n\"iso_code\": \"US\",\n\"first_name\":\"Aleaha2\",\n\"last_name\":\"khan\",\n\"nid\":\"\",\n\"designation\":\"QA Guy\",\n\"department\":\"Tech\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"nid must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"nid must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -9 Register app users without phone number and company _id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "222b77ec-f164-40a5-ad20-72e029d859a5",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"phone_number must be non-empty\",",
									"                \"company_id must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"phone_number must be non-empty\",",
									"                    \"company_id must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"phone_number must be non-empty\",",
									"                            \"company_id must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"\",\n\n\"company_id\": \"\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Aleaha2\",\n\n\"last_name\":\"khan\",\n\n\"nid\":\"9874628364729374\",\n\n\"designation\":\"QA Guy\",\n\n\"department\":\"Tech\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" phone number and company_id info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"\",\n\"company_id\": \"\",\n\"iso_code\": \"US\",\n\"first_name\":\"Aleaha2\",\n\"last_name\":\"khan\",\n\"nid\":\"9874628364729374\",\n\"designation\":\"QA Guy\",\n\"department\":\"Tech\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"phone_number must be non-empty\"\n        \"company_id must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"phone_number must be non-empty\"\n        \"company_id must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -10 Register app users without phone number and iso ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "88688169-50b1-455a-b6c9-280e16bcadab",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"phone_number must be non-empty\",",
									"                \"iso_code must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"phone_number must be non-empty\",",
									"                    \"iso_code must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"phone_number must be non-empty\",",
									"                            \"iso_code must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"\",\n\n\"company_id\": 179,\n\n\"iso_code\": \"\",\n\n\"first_name\":\"Aleaha2\",\n\n\"last_name\":\"khan\",\n\n\"nid\":\"9874628364729374\",\n\n\"designation\":\"QA Guy\",\n\n\"department\":\"Tech\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" phone number and iso info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"\",\n\"company_id\": 179,\n\"iso_code\": \"\",\n\"first_name\":\"Aleaha2\",\n\"last_name\":\"khan\",\n\"nid\":\"9874628364729374\",\n\"designation\":\"QA Guy\",\n\"department\":\"Tech\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"phone_number must be non-empty\"\n        \"iso must be non_empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"phone_number must be non-empty\"\n        \"iso must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -11 Register app users without phone number and firstname",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4641ade6-d2d7-48e6-8756-d3c6e5c5cdf6",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"phone_number must be non-empty\",",
									"                \"first_name must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"phone_number must be non-empty\",",
									"                    \"first_name must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"phone_number must be non-empty\",",
									"                            \"first_name must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"\",\n\n\"company_id\": 179,\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"\",\n\n\"last_name\":\"khan\",\n\n\"nid\":\"9874628364729374\",\n\n\"designation\":\"QA Guy\",\n\n\"department\":\"Tech\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" phone number and firstname info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"\",\n\"company_id\": 179,\n\"iso_code\": \"US\",\n\"first_name\":\"\",\n\"last_name\":\"khan\",\n\"nid\":\"9874628364729374\",\n\"designation\":\"QA Guy\",\n\"department\":\"Tech\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"phone_number must be non-empty\"\n        \"firstname must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"phone_number must be non-empty\"\n        \"firstname must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -12 Register app users without phone number and lastname",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5b0ff95c-351c-4128-9f62-675b52a2ba98",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"phone_number must be non-empty\",",
									"                \"last_name must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"phone_number must be non-empty\",",
									"                    \"last_name must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"phone_number must be non-empty\",",
									"                            \"last_name must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"\",\n\n\"company_id\": 179,\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Aleaha2\",\n\n\"last_name\":\"\",\n\n\"nid\":\"9874628364729374\",\n\n\"designation\":\"QA Guy\",\n\n\"department\":\"Tech\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" phone and lastname info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"\",\n\"company_id\": 179,\n\"iso_code\": \"US\",\n\"first_name\":\"Aleaha2\",\n\"last_name\":\"\",\n\"nid\":\"9874628364729374\",\n\"designation\":\"QA Guy\",\n\"department\":\"Tech\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"phone_number must be non-empty\"\n        \"lastname must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"phone_number must be non-empty\"\n        \"lastname must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "-FFME2-14 -13 Register app users without phone number and nid",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ef424c36-d49f-4274-b3ea-5904cfbb3805",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"phone_number must be non-empty\",",
									"                \"nid must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"phone_number must be non-empty\",",
									"                    \"nid must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"phone_number must be non-empty\",",
									"                            \"nid must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"\",\n\n\"company_id\": 179,\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Aleaha2\",\n\n\"last_name\":\"khan\",\n\n\"nid\":\"\",\n\n\"designation\":\"QA Guy\",\n\n\"department\":\"Tech\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" phone number and nid info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"\",\n\"company_id\": 179,\n\"iso_code\": \"US\",\n\"first_name\":\"Aleaha2\",\n\"last_name\":\"khan\",\n\"nid\":\"\",\n\"designation\":\"QA Guy\",\n\"department\":\"Tech\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"phone_number must be non-empty\"\n        \"nid must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"phone_number must be non-empty\"\n        \"nid must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -14 Register app users without phone number and designation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fab7a9f1-76c7-4e97-a13d-cfaf93dae925",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"phone_number must be non-empty\",",
									"                \"designation must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"phone_number must be non-empty\",",
									"                    \"designation must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"phone_number must be non-empty\",",
									"                            \"designation must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"\",\n\n\"company_id\": 179,\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Aleaha2\",\n\n\"last_name\":\"khan\",\n\n\"nid\":\"9874628364729374\",\n\n\"designation\":\"\",\n\n\"department\":\"Tech\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" phone number and designation info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"\",\n\"company_id\": 179,\n\"iso_code\": \"US\",\n\"first_name\":\"Aleaha2\",\n\"last_name\":\"khan\",\n\"nid\":\"9874628364729374\",\n\"designation\":\"\",\n\"department\":\"Tech\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"phone_number must be non-empty\"\n        \"designation must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"phone_number must be non-empty\"\n        \"designation must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -15 Register app users without phone number and department",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "792ffb8e-9967-4e78-a395-83ebce9e40dd",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"phone_number must be non-empty\",",
									"                \"department must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"phone_number must be non-empty\",",
									"                    \"department must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"phone_number must be non-empty\",",
									"                            \"department must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"\",\n\n\"company_id\": 179,\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Aleaha2\",\n\n\"last_name\":\"khan\",\n\n\"nid\":\"9874628364729374\",\n\n\"designation\":\"QA Guy\",\n\n\"department\":\"\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" phone number and department info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"\",\n\"company_id\": 179,\n\"iso_code\": \"US\",\n\"first_name\":\"Aleaha2\",\n\"last_name\":\"khan\",\n\"nid\":\"9874628364729374\",\n\"designation\":\"QA Guy\",\n\"department\":\"\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"phone_number must be non-empty\"\n        \"department must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"phone_number must be non-empty\"\n        \"department must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -16 Register app users without company _id and iso ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a85aa993-fc1d-4999-84b4-dab35ce3012b",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"iso_code must be non-empty\",",
									"                \"company_id must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"iso_code must be non-empty\",",
									"                    \"company_id must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"iso_code must be non-empty\",",
									"                            \"company_id must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"5867331339\",\n\n\"company_id\": \"\",\n\n\"iso_code\": \"\",\n\n\"first_name\":\"Aleaha2\",\n\n\"last_name\":\"khan\",\n\n\"nid\":\"9874628364729374\",\n\n\"designation\":\"QA Guy\",\n\n\"department\":\"Tech\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" company_id and iso info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"5867331339\",\n\"company_id\": \"\",\n\"iso_code\": \"\",\n\"first_name\":\"Aleaha2\",\n\"last_name\":\"khan\",\n\"nid\":\"9874628364729374\",\n\"designation\":\"QA Guy\",\n\"department\":\"Tech\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"company_id must be non-empty\"\n        \"iso must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"company_id must be non-empty\"\n        \"iso must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -17 Register app users without company_ id and firstname",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b635ffd0-c29a-43d2-8f56-b02ffa93b86c",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"company_id must be non-empty\",",
									"                \"first_name must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"company_id must be non-empty\",",
									"                    \"first_name must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"company_id must be non-empty\",",
									"                            \"first_name must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"5867331339\",\n\n\"company_id\": \"\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"\",\n\n\"last_name\":\"khan\",\n\n\"nid\":\"9874628364729374\",\n\n\"designation\":\"QA Guy\",\n\n\"department\":\"Tech\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" company_id and firstname info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"5867331339\",\n\"company_id\": \"\",\n\"iso_code\": \"US\",\n\"first_name\":\"\",\n\"last_name\":\"khan\",\n\"nid\":\"9874628364729374\",\n\"designation\":\"QA Guy\",\n\"department\":\"Tech\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"company_id must be non-empty\"\n        \"firstname must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"phone_number must be non-empty\"\n        \"firstname must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -18 Register app users without company id and lastname",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "112138a3-1e99-451f-b8fe-dc57d91c79a2",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"company_id must be non-empty\",",
									"                \"last_name must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"company_id must be non-empty\",",
									"                    \"last_name must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"company_id must be non-empty\",",
									"                            \"last_name must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"5867331339\",\n\n\"company_id\": \"\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Aleaha2\",\n\n\"last_name\":\"\",\n\n\"nid\":\"9874628364729374\",\n\n\"designation\":\"QA Guy\",\n\n\"department\":\"Tech\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" company_id and lastname info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"5867331339\",\n\"company_id\": \"\",\n\"iso_code\": \"US\",\n\"first_name\":\"Aleaha2\",\n\"last_name\":\"\",\n\"nid\":\"9874628364729374\",\n\"designation\":\"QA Guy\",\n\"department\":\"Tech\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"company_id must be non-empty\"\n        \"lastname must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"phone_number must be non-empty\"\n        \"lastname must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -19 Register app users without company _id and nid ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ebfa5daf-c730-4526-9ebe-7f50c23796f1",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"company_id must be non-empty\",",
									"                \"nid must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"company_id must be non-empty\",",
									"                    \"nid must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"company_id must be non-empty\",",
									"                            \"nid must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"5867331339\",\n\n\"company_id\": \"\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Aleaha2\",\n\n\"last_name\":\"khan\",\n\n\"nid\":\"\",\n\n\"designation\":\"QA Guy\",\n\n\"department\":\"Tech\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" company_id and nid info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"5867331339\",\n\"company_id\": \"\",\n\"iso_code\": \"US\",\n\"first_name\":\"Aleaha2\",\n\"last_name\":\"khan\",\n\"nid\":\"\",\n\"designation\":\"QA Guy\",\n\"department\":\"Tech\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"company_id must be non-empty\"\n        \"nid must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"phone_number must be non-empty\"\n        \"nid must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -20 Register app users without company _id and designation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ba9ee36f-f1cf-47c7-9dee-099d9e5564a9",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"company_id must be non-empty\",",
									"                \"designation must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"company_id must be non-empty\",",
									"                    \"designation must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"company_id must be non-empty\",",
									"                            \"designation must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"5867331339\",\n\n\"company_id\": \"\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Aleaha2\",\n\n\"last_name\":\"khan\",\n\n\"nid\":\"9874628364729374\",\n\n\"designation\":\"\",\n\n\"department\":\"Tech\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" company_id and designation info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"5867331339\",\n\"company_id\": \"\",\n\"iso_code\": \"US\",\n\"first_name\":\"Aleaha2\",\n\"last_name\":\"khan\",\n\"nid\":\"9874628364729374\",\n\"designation\":\"\",\n\"department\":\"Tech\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"company_id must be non-empty\"\n        \"designation must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"phone_number must be non-empty\"\n        \"designation must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -21 Register app users without company_ id and department",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "33dd1989-5ebf-4ffd-bb49-854aff0212ad",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"company_id must be non-empty\",",
									"                \"department must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"company_id must be non-empty\",",
									"                    \"department must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"company_id must be non-empty\",",
									"                            \"department must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"5867331339\",\n\n\"company_id\": \"\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Aleaha2\",\n\n\"last_name\":\"khan\",\n\n\"nid\":\"9874628364729374\",\n\n\"designation\":\"QA Guy\",\n\n\"department\":\"\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" company_id and department info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"5867331339\",\n\"company_id\": \"\",\n\"iso_code\": \"US\",\n\"first_name\":\"Aleaha2\",\n\"last_name\":\"khan\",\n\"nid\":\"9874628364729374\",\n\"designation\":\"QA Guy\",\n\"department\":\"\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"company_id must be non-empty\"\n        \"department must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"phone_number must be non-empty\"\n        \"department must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -22 Register app users without iso _code and firstname",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "47fa11cb-0331-400f-a4e4-91940b372ae9",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"iso_code must be non-empty\",",
									"                \"first_name must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"iso_code must be non-empty\",",
									"                    \"first_name must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"iso_code must be non-empty\",",
									"                            \"first_name must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"5867331339\",\n\n\"company_id\": 179,\n\n\"iso_code\": \"\",\n\n\"first_name\":\"\",\n\n\"last_name\":\"khan\",\n\n\"nid\":\"9874628364729374\",\n\n\"designation\":\"QA Guy\",\n\n\"department\":\"Tech\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" iso_code and firstname info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"5867331339\",\n\"company_id\": 179,\n\"iso_code\": \"\",\n\"first_name\":\"\",\n\"last_name\":\"khan\",\n\"nid\":\"9874628364729374\",\n\"designation\":\"QA Guy\",\n\"department\":\"Tech\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"iso_code must be non-empty\"\n        \"firstname must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"iso_code must be non-empty\"\n        \"firstname must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -23 Register app users without iso_code and lastname",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c00c35bb-5c67-47fe-bb70-64befee9a721",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"iso_code must be non-empty\",",
									"                \"last_name must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"iso_code must be non-empty\",",
									"                    \"last_name must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"iso_code must be non-empty\",",
									"                            \"last_name must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"5867331339\",\n\n\"company_id\": 179,\n\n\"iso_code\": \"\",\n\n\"first_name\":\"Aleaha2\",\n\n\"last_name\":\"\",\n\n\"nid\":\"9874628364729374\",\n\n\"designation\":\"QA Guy\",\n\n\"department\":\"Tech\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" iso_code and lastname info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"5867331339\",\n\"company_id\": 179,\n\"iso_code\": \"\",\n\"first_name\":\"Aleaha2\",\n\"last_name\":\"\",\n\"nid\":\"9874628364729374\",\n\"designation\":\"QA Guy\",\n\"department\":\"Tech\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"iso_code must be non-empty\"\n        \"lastname must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"iso_code must be non-empty\"\n        \"lastname must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -24 Register app users without iso_ code and nid",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "877c03ee-6e1a-4308-a525-a3c584a90f14",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"iso_code must be non-empty\",",
									"                \"nid must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"iso_code must be non-empty\",",
									"                    \"nid must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"iso_code must be non-empty\",",
									"                            \"nid must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"5867331339\",\n\n\"company_id\": 179,\n\n\"iso_code\": \"\",\n\n\"first_name\":\"Aleaha2\",\n\n\"last_name\":\"khan\",\n\n\"nid\":\"\",\n\n\"designation\":\"QA Guy\",\n\n\"department\":\"Tech\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" iso_code and nid info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"5867331339\",\n\"company_id\": 179,\n\"iso_code\": \"\",\n\"first_name\":\"Aleaha2\",\n\"last_name\":\"khan\",\n\"nid\":\"\",\n\"designation\":\"QA Guy\",\n\"department\":\"Tech\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"iso_code must be non-empty\"\n        \"nid must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"iso_code must be non-empty\"\n        \"nid must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -25 Register app users without iso code and designation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0dda9a75-e331-424a-bd61-74e922de279a",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"iso_code must be non-empty\",",
									"                \"designation must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"iso_code must be non-empty\",",
									"                    \"designation must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"iso_code must be non-empty\",",
									"                            \"designation must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"5867331339\",\n\n\"company_id\": 179,\n\n\"iso_code\": \"\",\n\n\"first_name\":\"Aleaha2\",\n\n\"last_name\":\"khan\",\n\n\"nid\":\"9874628364729374\",\n\n\"designation\":\"\",\n\n\"department\":\"Tech\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" iso_code and designation info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"5867331339\",\n\"company_id\": 179,\n\"iso_code\": \"\",\n\"first_name\":\"Aleaha2\",\n\"last_name\":\"khan\",\n\"nid\":\"9874628364729374\",\n\"designation\":\"\",\n\"department\":\"Tech\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"iso_code must be non-empty\"\n        \"designation must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"iso_code must be non-empty\"\n        \"designation must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -26 Register app users without iso_ code and department",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "166a24bd-4e99-4fe7-a0eb-703ffcb76e59",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"iso_code must be non-empty\",",
									"                \"department must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"iso_code must be non-empty\",",
									"                    \"department must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"iso_code must be non-empty\",",
									"                            \"department must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"5867331339\",\n\n\"company_id\": 179,\n\n\"iso_code\": \"\",\n\n\"first_name\":\"Aleaha2\",\n\n\"last_name\":\"khan\",\n\n\"nid\":\"9874628364729374\",\n\n\"designation\":\"QA Guy\",\n\n\"department\":\"\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" iso_code and department info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"5867331339\",\n\"company_id\": 179,\n\"iso_code\": \"\",\n\"first_name\":\"Aleaha2\",\n\"last_name\":\"khan\",\n\"nid\":\"9874628364729374\",\n\"designation\":\"QA Guy\",\n\"department\":\"\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"iso_code must be non-empty\"\n        \"department must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"iso_code must be non-empty\"\n        \"department must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -27 Register app users without firstname and lastname",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4bd1b40d-5277-40f2-ab67-cc9e19342ce7",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"first_name must be non-empty\",",
									"                \"last_name must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"first_name must be non-empty\",",
									"                    \"last_name must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"first_name must be non-empty\",",
									"                            \"last_name must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"5867331339\",\n\n\"company_id\": 179,\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"\",\n\n\"last_name\":\"\",\n\n\"nid\":\"9874628364729374\",\n\n\"designation\":\"QA Guy\",\n\n\"department\":\"Tech\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" firstname and lastname info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"5867331339\",\n\"company_id\": 179,\n\"iso_code\": \"US\",\n\"first_name\":\"\",\n\"last_name\":\"\",\n\"nid\":\"9874628364729374\",\n\"designation\":\"QA Guy\",\n\"department\":\"Tech\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"firstname must be non-empty\"\n        \"lastname must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"firstname must be non-empty\"\n        \"laststname must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -28 Register app users without firstname and nid",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "12f938c3-d0d3-4438-9eb7-ec8a1a03a127",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"first_name must be non-empty\",",
									"                \"nid must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"first_name must be non-empty\",",
									"                    \"nid must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"first_name must be non-empty\",",
									"                            \"nid must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"5867331339\",\n\n\"company_id\": 179,\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"\",\n\n\"last_name\":\"khan\",\n\n\"nid\":\"\",\n\n\"designation\":\"QA Guy\",\n\n\"department\":\"Tech\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" firstname and nid info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"5867331339\",\n\"company_id\": 179,\n\"iso_code\": \"US\",\n\"first_name\":\"\",\n\"last_name\":\"khan\",\n\"nid\":\"\",\n\"designation\":\"QA Guy\",\n\"department\":\"Tech\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"firstname must be non-empty\"\n        \"nid must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"firstname must be non-empty\"\n        \"nid must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -29 Register app users without firstname and designation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ad9db62b-4a89-478d-a7d1-664100e4fb93",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"first_name must be non-empty\",",
									"                \"designation must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"first_name must be non-empty\",",
									"                    \"designation must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"first_name must be non-empty\",",
									"                            \"designation must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"5867331339\",\n\n\"company_id\": 179,\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"\",\n\n\"last_name\":\"khan\",\n\n\"nid\":\"9874628364729374\",\n\n\"designation\":\"\",\n\n\"department\":\"Tech\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" firstname and designation info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"5867331339\",\n\"company_id\": 179,\n\"iso_code\": \"US\",\n\"first_name\":\"\",\n\"last_name\":\"khan\",\n\"nid\":\"9874628364729374\",\n\"designation\":\"\",\n\"department\":\"Tech\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"firstname must be non-empty\"\n        \"designation must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"firstname must be non-empty\"\n        \"designation must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -30 Register app users without firstname and department",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "23a12ab1-8e0d-4538-9a9e-3ce96602176f",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"first_name must be non-empty\",",
									"                \"department must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"first_name must be non-empty\",",
									"                    \"department must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"first_name must be non-empty\",",
									"                            \"department must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"5867331339\",\n\n\"company_id\": 179,\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"\",\n\n\"last_name\":\"khan\",\n\n\"nid\":\"9874628364729374\",\n\n\"designation\":\"QA Guy\",\n\n\"department\":\"\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" firstname and department info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"5867331339\",\n\"company_id\": 179,\n\"iso_code\": \"US\",\n\"first_name\":\"\",\n\"last_name\":\"khan\",\n\"nid\":\"9874628364729374\",\n\"designation\":\"QA Guy\",\n\"department\":\"\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"firstname must be non-empty\"\n        \"department must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"firstname must be non-empty\"\n        \"department must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -31 Register app users without lastname and nid",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "997d7768-d835-422a-b4a0-92079f555ef3",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"last_name must be non-empty\",",
									"                \"nid must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"last_name must be non-empty\",",
									"                    \"nid must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"last_name must be non-empty\",",
									"                            \"nid must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"5867331339\",\n\n\"company_id\": 179,\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Aleaha2\",\n\n\"last_name\":\"\",\n\n\"nid\":\"\",\n\n\"designation\":\"QA Guy\",\n\n\"department\":\"Tech\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" lastname and nid info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"5867331339\",\n\"company_id\": 179,\n\"iso_code\": \"US\",\n\"first_name\":\"Aleaha2\",\n\"last_name\":\"\",\n\"nid\":\"\",\n\"designation\":\"QA Guy\",\n\"department\":\"Tech\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"lastname must be non-empty\"\n        \"nid must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"lastname must be non-empty\"\n        \"nid must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -32 Register app users without lastname and designation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5e8982b9-8bfd-4fe7-8513-4dcb41b5bc1b",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"last_name must be non-empty\",",
									"                \"designation must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"last_name must be non-empty\",",
									"                    \"designation must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"last_name must be non-empty\",",
									"                            \"designation must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"5867331339\",\n\n\"company_id\": 179,\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Aleaha2\",\n\n\"last_name\":\"\",\n\n\"nid\":\"9874628364729374\",\n\n\"designation\":\"\",\n\n\"department\":\"Tech\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" lastname and designation info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"5867331339\",\n\"company_id\": 179,\n\"iso_code\": \"US\",\n\"first_name\":\"Aleaha2\",\n\"last_name\":\"\",\n\"nid\":\"9874628364729374\",\n\"designation\":\"\",\n\"department\":\"Tech\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"lastname must be non-empty\"\n        \"designation must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"lastname must be non-empty\"\n        \"designation must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -33 Register app users without lastname and department",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7188d5f5-2f7e-4166-91c0-fcd3956c8c60",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"last_name must be non-empty\",",
									"                \"department must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"last_name must be non-empty\",",
									"                    \"department must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"last_name must be non-empty\",",
									"                            \"department must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"5867331339\",\n\n\"company_id\": 179,\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Aleaha2\",\n\n\"last_name\":\"\",\n\n\"nid\":\"9874628364729374\",\n\n\"designation\":\"QA Guy\",\n\n\"department\":\"\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" lastname and department info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"5867331339\",\n\"company_id\": 179,\n\"iso_code\": \"US\",\n\"first_name\":\"Aleaha2\",\n\"last_name\":\"\",\n\"nid\":\"9874628364729374\",\n\"designation\":\"QA Guy\",\n\"department\":\"\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"lastname must be non-empty\"\n        \"department must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"lastname must be non-empty\"\n        \"department must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -34 Register app users without nid and designation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ccd48ac3-6ad8-4164-8b3b-268cb279c6df",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"nid must be non-empty\",",
									"                \"designation must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"nid must be non-empty\",",
									"                    \"designation must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"nid must be non-empty\",",
									"                            \"designation must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"5867331339\",\n\n\"company_id\": 179,\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Aleaha2\",\n\n\"last_name\":\"khan\",\n\n\"nid\":\"\",\n\n\"designation\":\"\",\n\n\"department\":\"Tech\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" nid and designation info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"5867331339\",\n\"company_id\": 179,\n\"iso_code\": \"US\",\n\"first_name\":\"Aleaha2\",\n\"last_name\":\"khan\",\n\"nid\":\"\",\n\"designation\":\"\",\n\"department\":\"Tech\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"nid must be non-empty\"\n        \"designation must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"nid must be non-empty\"\n        \"designation must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -35 Register app users without nid and department",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2ad94ef7-d1ca-4ea1-b79b-5b4c6214e3e8",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"nid must be non-empty\",",
									"                \"department must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"nid must be non-empty\",",
									"                    \"department must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"nid must be non-empty\",",
									"                            \"department must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"5867331339\",\n\n\"company_id\": 179,\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Aleaha2\",\n\n\"last_name\":\"khan\",\n\n\"nid\":\"\",\n\n\"designation\":\"QA Guy\",\n\n\"department\":\"\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" nid and department info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"5867331339\",\n\"company_id\": 179,\n\"iso_code\": \"US\",\n\"first_name\":\"Aleaha2\",\n\"last_name\":\"khan\",\n\"nid\":\"\",\n\"designation\":\"QA Guy\",\n\"department\":\"\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"nid must be non-empty\"\n        \"department must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"nid must be non-empty\"\n        \"department must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -36 Register app users without designation and department",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c66f82bf-aa2f-41c8-8f5e-1836af739c13",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"designation must be non-empty\",",
									"                \"department must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"designation must be non-empty\",",
									"                    \"department must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"designation must be non-empty\",",
									"                            \"department must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"5867331339\",\n\n\"company_id\": 179,\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Aleaha2\",\n\n\"last_name\":\"khan\",\n\n\"nid\":\"9874628364729374\",\n\n\"designation\":\"\",\n\n\"department\":\"\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" designation and department info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"5867331339\",\n\"company_id\": 179,\n\"iso_code\": \"US\",\n\"first_name\":\"Aleaha2\",\n\"last_name\":\"khan\",\n\"nid\":\"9874628364729374\",\n\"designation\":\"\",\n\"department\":\"\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"designation must be non-empty\"\n        \"department must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"designation must be non-empty\"\n        \"department must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "876bcb6f-070c-4ada-a0c1-2b14654929df",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "93eb7311-cdea-4371-b984-c6bb5577bec1",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "2e2b17f5-24fd-4661-b085-ad72cacff3fb",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "4811c126-e1b0-4d42-a23e-d0653cf1fcb1",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}
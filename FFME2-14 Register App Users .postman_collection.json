{
	"info": {
		"_postman_id": "c67c6899-2d57-49ea-baa7-8b0c3827ef35",
		"name": "FFME2-14 Register App Users ",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Positive",
			"item": [
				{
					"name": "FFME2 -14  Company admin should be able to register app user from admin panel ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4345466a-5b75-4892-a0c1-ff818678f677",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema = {",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": \"Successfully registered\",",
									"            \"status\": \"success\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"Successfully registered\"",
									"            ]",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"success\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"2487331339\",\n\n\"company_id\": 179,\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Aleaha2\",\n\n\"last_name\":\"khan2\",\n\n\"nid\":\"9874628364729374\",\n\n\"designation\":\"QA Guy\",\n\n\"department\":\"Tech\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Company admin should be able to register App users from the admin panel so that they can access the service.\n\nSE: Shiblu Ahmed\nPO: Pranto Majumder\nQA: Abidur Aleaha khan\nReviewer:Pranto Majumder\n\nTest Steps: Test steps includes the following payload as a json format in body\nMethod: POST\n{\n\n\"phone_number\": \"5867331339\",\n\"company_id\": 179,\n\"iso_code\": \"US\",\n\"first_name\":\"Aleaha2\",\n\"last_name\":\"khan\",\n\"nid\":\"9874628364729374\",\n\"designation\":\"QA Guy\",\n\"department\":\"Tech\"\n\n}\nExpected Result:\n{\n    \"message\": \"Successfully registered\",\n    \"status\": \"success\"\n}\nActual Result:\n{\n    \"message\": \"Successfully registered\",\n    \"status\": \"success\"\n}\nStatus Code: 201 CREATED"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Negative",
			"item": [
				{
					"name": "FFME2-14 -1 Register app users without phone number",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "be458bc4-5a10-448c-87e9-3d7f42282c30",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": \"Phone Number already exists. Please Log in.\",",
									"            \"status\": \"fail\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"Phone Number already exists. Please Log in.\"",
									"            ]",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"fail\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"5867331339\",\n\n\"company_id\": 179,\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Aleaha2\",\n\n\"last_name\":\"khan\",\n\n\"nid\":\"9874628364729374\",\n\n\"designation\":\"QA Guy\",\n\n\"department\":\"Tech\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" phone info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"\",\n\"company_id\": 179,\n\"iso_code\": \"US\",\n\"first_name\":\"Aleaha2\",\n\"last_name\":\"khan\",\n\"nid\":\"9874628364729374\",\n\"designation\":\"QA Guy\",\n\"department\":\"Tech\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"phone_number must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"phone_number must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -2 Register app users without compant id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3ce5e5c6-38b5-42d1-b06b-260c966471d9",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"company_id must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"company_id must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"company_id must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"5867331339\",\n\n\"company_id\": \"\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Aleaha2\",\n\n\"last_name\":\"khan\",\n\n\"nid\":\"9874628364729374\",\n\n\"designation\":\"QA Guy\",\n\n\"department\":\"Tech\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" company_id info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"5867331339\",\n\"company_id\": \"\",\n\"iso_code\": \"US\",\n\"first_name\":\"Aleaha2\",\n\"last_name\":\"khan\",\n\"nid\":\"9874628364729374\",\n\"designation\":\"QA Guy\",\n\"department\":\"Tech\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"company_id must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"company_id must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -3 Register app users without iso_code",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e4c56e41-57c3-4598-8347-549d385d8a01",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"company_id must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"company_id must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"company_id must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"5867331339\",\n\n\"company_id\": \"\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Aleaha2\",\n\n\"last_name\":\"khan\",\n\n\"nid\":\"9874628364729374\",\n\n\"designation\":\"QA Guy\",\n\n\"department\":\"Tech\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" iso_code info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"5867331339\",\n\"company_id\": 179,\n\"iso_code\": \"\",\n\"first_name\":\"Aleaha2\",\n\"last_name\":\"khan\",\n\"nid\":\"9874628364729374\",\n\"designation\":\"QA Guy\",\n\"department\":\"Tech\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"iso_code must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"iso_code must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -4 Register app users without firstname",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "64a031fd-3478-4fcd-ae87-b5d0653788b7",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"first_name must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"first_name must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"first_name must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"5867331339\",\n\n\"company_id\": 179,\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"\",\n\n\"last_name\":\"khan\",\n\n\"nid\":\"9874628364729374\",\n\n\"designation\":\"QA Guy\",\n\n\"department\":\"Tech\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" firstname info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"5867331339\",\n\"company_id\": 179,\n\"iso_code\": \"US\",\n\"first_name\":\"\",\n\"last_name\":\"khan\",\n\"nid\":\"9874628364729374\",\n\"designation\":\"QA Guy\",\n\"department\":\"Tech\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"firstname must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"firstname must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -5 Register app users without lastname",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f0ec1e7a-a366-4240-8345-431980ce04cf",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"last_name must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"last_name must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"last_name must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"5867331339\",\n\n\"company_id\": 179,\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Aleaha2\",\n\n\"last_name\":\"\",\n\n\"nid\":\"9874628364729374\",\n\n\"designation\":\"QA Guy\",\n\n\"department\":\"Tech\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" lastname info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"5867331339\",\n\"company_id\": 179,\n\"iso_code\": \"US\",\n\"first_name\":\"Aleaha2\",\n\"last_name\":\"\",\n\"nid\":\"9874628364729374\",\n\"designation\":\"QA Guy\",\n\"department\":\"Tech\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"lastname must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"lastname must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -6 Register app users without designation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bb0d9bdc-c429-41db-8aab-5c9d52933b5d",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"last_name must be non-empty\",",
									"                \"designation must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"last_name must be non-empty\",",
									"                    \"designation must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"last_name must be non-empty\",",
									"                            \"designation must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"5867331339\",\n\n\"company_id\": 179,\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Aleaha2\",\n\n\"last_name\":\"\",\n\n\"nid\":\"9874628364729374\",\n\n\"designation\":\"\",\n\n\"department\":\"Tech\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" designation info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"5867331339\",\n\"company_id\": 179,\n\"iso_code\": \"US\",\n\"first_name\":\"Aleaha2\",\n\"last_name\":\"khan\",\n\"nid\":\"9874628364729374\",\n\"designation\":\"\",\n\"department\":\"Tech\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"designation must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"designation must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -7 Register app users without department",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4eae8d9d-c906-4bc3-a41f-d7af01b7f2ae",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"department must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"department must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"department must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"5867331339\",\n\n\"company_id\": 179,\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Aleaha2\",\n\n\"last_name\":\"khan\",\n\n\"nid\":\"9874628364729374\",\n\n\"designation\":\"QA Guy\",\n\n\"department\":\"\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" department info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"5867331339\",\n\"company_id\": 179,\n\"iso_code\": \"US\",\n\"first_name\":\"Aleaha2\",\n\"last_name\":\"khan\",\n\"nid\":\"9874628364729374\",\n\"designation\":\"QA Guy\",\n\"department\":\"\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"department must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"department must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -8 Register app users without nid ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "92db2a7e-b0cc-45a8-a860-b5431d2b41c7",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"nid must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"nid must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"nid must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"5867331339\",\n\n\"company_id\": 179,\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Aleaha2\",\n\n\"last_name\":\"khan\",\n\n\"nid\":\"\",\n\n\"designation\":\"QA Guy\",\n\n\"department\":\"Tech\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" nid info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"5867331339\",\n\"company_id\": 179,\n\"iso_code\": \"US\",\n\"first_name\":\"Aleaha2\",\n\"last_name\":\"khan\",\n\"nid\":\"\",\n\"designation\":\"QA Guy\",\n\"department\":\"Tech\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"nid must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"nid must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -9 Register app users without phone number and company _id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "713aedfd-84f8-40ea-93df-a16f6b190ac6",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"phone_number must be non-empty\",",
									"                \"company_id must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"phone_number must be non-empty\",",
									"                    \"company_id must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"phone_number must be non-empty\",",
									"                            \"company_id must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"\",\n\n\"company_id\": \"\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Aleaha2\",\n\n\"last_name\":\"khan\",\n\n\"nid\":\"9874628364729374\",\n\n\"designation\":\"QA Guy\",\n\n\"department\":\"Tech\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" phone number and company_id info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"\",\n\"company_id\": \"\",\n\"iso_code\": \"US\",\n\"first_name\":\"Aleaha2\",\n\"last_name\":\"khan\",\n\"nid\":\"9874628364729374\",\n\"designation\":\"QA Guy\",\n\"department\":\"Tech\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"phone_number must be non-empty\"\n        \"company_id must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"phone_number must be non-empty\"\n        \"company_id must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -10 Register app users without phone number and iso ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "780eb119-4e5f-4329-aaf5-87cdbc78591e",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"phone_number must be non-empty\",",
									"                \"iso_code must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"phone_number must be non-empty\",",
									"                    \"iso_code must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"phone_number must be non-empty\",",
									"                            \"iso_code must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"\",\n\n\"company_id\": 179,\n\n\"iso_code\": \"\",\n\n\"first_name\":\"Aleaha2\",\n\n\"last_name\":\"khan\",\n\n\"nid\":\"9874628364729374\",\n\n\"designation\":\"QA Guy\",\n\n\"department\":\"Tech\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" phone number and iso info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"\",\n\"company_id\": 179,\n\"iso_code\": \"\",\n\"first_name\":\"Aleaha2\",\n\"last_name\":\"khan\",\n\"nid\":\"9874628364729374\",\n\"designation\":\"QA Guy\",\n\"department\":\"Tech\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"phone_number must be non-empty\"\n        \"iso must be non_empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"phone_number must be non-empty\"\n        \"iso must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -11 Register app users without phone number and firstname",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ee314189-8e2a-4415-b8f0-e5f966d48657",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"phone_number must be non-empty\",",
									"                \"first_name must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"phone_number must be non-empty\",",
									"                    \"first_name must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"phone_number must be non-empty\",",
									"                            \"first_name must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"\",\n\n\"company_id\": 179,\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"\",\n\n\"last_name\":\"khan\",\n\n\"nid\":\"9874628364729374\",\n\n\"designation\":\"QA Guy\",\n\n\"department\":\"Tech\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" phone number and firstname info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"\",\n\"company_id\": 179,\n\"iso_code\": \"US\",\n\"first_name\":\"\",\n\"last_name\":\"khan\",\n\"nid\":\"9874628364729374\",\n\"designation\":\"QA Guy\",\n\"department\":\"Tech\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"phone_number must be non-empty\"\n        \"firstname must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"phone_number must be non-empty\"\n        \"firstname must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -12 Register app users without phone number and lastname",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "96feb8e8-97f8-40ef-b547-ae61483939c2",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"phone_number must be non-empty\",",
									"                \"last_name must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"phone_number must be non-empty\",",
									"                    \"last_name must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"phone_number must be non-empty\",",
									"                            \"last_name must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"\",\n\n\"company_id\": 179,\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Aleaha2\",\n\n\"last_name\":\"\",\n\n\"nid\":\"9874628364729374\",\n\n\"designation\":\"QA Guy\",\n\n\"department\":\"Tech\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" phone and lastname info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"\",\n\"company_id\": 179,\n\"iso_code\": \"US\",\n\"first_name\":\"Aleaha2\",\n\"last_name\":\"\",\n\"nid\":\"9874628364729374\",\n\"designation\":\"QA Guy\",\n\"department\":\"Tech\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"phone_number must be non-empty\"\n        \"lastname must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"phone_number must be non-empty\"\n        \"lastname must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "-FFME2-14 -13 Register app users without phone number and nid",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e4967b60-725d-4529-ac38-5e3eda7eb0f1",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"phone_number must be non-empty\",",
									"                \"nid must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"phone_number must be non-empty\",",
									"                    \"nid must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"phone_number must be non-empty\",",
									"                            \"nid must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"\",\n\n\"company_id\": 179,\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Aleaha2\",\n\n\"last_name\":\"khan\",\n\n\"nid\":\"\",\n\n\"designation\":\"QA Guy\",\n\n\"department\":\"Tech\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" phone number and nid info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"\",\n\"company_id\": 179,\n\"iso_code\": \"US\",\n\"first_name\":\"Aleaha2\",\n\"last_name\":\"khan\",\n\"nid\":\"\",\n\"designation\":\"QA Guy\",\n\"department\":\"Tech\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"phone_number must be non-empty\"\n        \"nid must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"phone_number must be non-empty\"\n        \"nid must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -14 Register app users without phone number and designation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4186874a-6f59-491e-ada2-9836cdd50741",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"phone_number must be non-empty\",",
									"                \"designation must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"phone_number must be non-empty\",",
									"                    \"designation must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"phone_number must be non-empty\",",
									"                            \"designation must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"\",\n\n\"company_id\": 179,\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Aleaha2\",\n\n\"last_name\":\"khan\",\n\n\"nid\":\"9874628364729374\",\n\n\"designation\":\"\",\n\n\"department\":\"Tech\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" phone number and designation info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"\",\n\"company_id\": 179,\n\"iso_code\": \"US\",\n\"first_name\":\"Aleaha2\",\n\"last_name\":\"khan\",\n\"nid\":\"9874628364729374\",\n\"designation\":\"\",\n\"department\":\"Tech\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"phone_number must be non-empty\"\n        \"designation must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"phone_number must be non-empty\"\n        \"designation must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -15 Register app users without phone number and department",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "14e8678e-d945-4fdc-ac9f-ac11b488ae52",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"phone_number must be non-empty\",",
									"                \"department must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"phone_number must be non-empty\",",
									"                    \"department must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"phone_number must be non-empty\",",
									"                            \"department must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"\",\n\n\"company_id\": 179,\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Aleaha2\",\n\n\"last_name\":\"khan\",\n\n\"nid\":\"9874628364729374\",\n\n\"designation\":\"QA Guy\",\n\n\"department\":\"\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" phone number and department info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"\",\n\"company_id\": 179,\n\"iso_code\": \"US\",\n\"first_name\":\"Aleaha2\",\n\"last_name\":\"khan\",\n\"nid\":\"9874628364729374\",\n\"designation\":\"QA Guy\",\n\"department\":\"\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"phone_number must be non-empty\"\n        \"department must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"phone_number must be non-empty\"\n        \"department must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -16 Register app users without company _id and iso ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "81f13166-0a70-4fd5-8613-bf7f3b508f3e",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"iso_code must be non-empty\",",
									"                \"company_id must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"iso_code must be non-empty\",",
									"                    \"company_id must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"iso_code must be non-empty\",",
									"                            \"company_id must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"5867331339\",\n\n\"company_id\": \"\",\n\n\"iso_code\": \"\",\n\n\"first_name\":\"Aleaha2\",\n\n\"last_name\":\"khan\",\n\n\"nid\":\"9874628364729374\",\n\n\"designation\":\"QA Guy\",\n\n\"department\":\"Tech\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" company_id and iso info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"5867331339\",\n\"company_id\": \"\",\n\"iso_code\": \"\",\n\"first_name\":\"Aleaha2\",\n\"last_name\":\"khan\",\n\"nid\":\"9874628364729374\",\n\"designation\":\"QA Guy\",\n\"department\":\"Tech\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"company_id must be non-empty\"\n        \"iso must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"company_id must be non-empty\"\n        \"iso must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -17 Register app users without company_ id and firstname",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5e9ed266-0176-4adc-b2c5-8d2106fe2a95",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"company_id must be non-empty\",",
									"                \"first_name must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"company_id must be non-empty\",",
									"                    \"first_name must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"company_id must be non-empty\",",
									"                            \"first_name must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"5867331339\",\n\n\"company_id\": \"\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"\",\n\n\"last_name\":\"khan\",\n\n\"nid\":\"9874628364729374\",\n\n\"designation\":\"QA Guy\",\n\n\"department\":\"Tech\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" company_id and firstname info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"5867331339\",\n\"company_id\": \"\",\n\"iso_code\": \"US\",\n\"first_name\":\"\",\n\"last_name\":\"khan\",\n\"nid\":\"9874628364729374\",\n\"designation\":\"QA Guy\",\n\"department\":\"Tech\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"company_id must be non-empty\"\n        \"firstname must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"phone_number must be non-empty\"\n        \"firstname must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -18 Register app users without company id and lastname",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "56891ef5-5da1-447b-9c14-9d69960a1ef4",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"company_id must be non-empty\",",
									"                \"last_name must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"company_id must be non-empty\",",
									"                    \"last_name must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"company_id must be non-empty\",",
									"                            \"last_name must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"5867331339\",\n\n\"company_id\": \"\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Aleaha2\",\n\n\"last_name\":\"\",\n\n\"nid\":\"9874628364729374\",\n\n\"designation\":\"QA Guy\",\n\n\"department\":\"Tech\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" company_id and lastname info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"5867331339\",\n\"company_id\": \"\",\n\"iso_code\": \"US\",\n\"first_name\":\"Aleaha2\",\n\"last_name\":\"\",\n\"nid\":\"9874628364729374\",\n\"designation\":\"QA Guy\",\n\"department\":\"Tech\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"company_id must be non-empty\"\n        \"lastname must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"phone_number must be non-empty\"\n        \"lastname must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -19 Register app users without company _id and nid ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1d266eeb-4889-4e4d-b3dc-d263b79c4201",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"company_id must be non-empty\",",
									"                \"nid must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"company_id must be non-empty\",",
									"                    \"nid must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"company_id must be non-empty\",",
									"                            \"nid must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"5867331339\",\n\n\"company_id\": \"\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Aleaha2\",\n\n\"last_name\":\"khan\",\n\n\"nid\":\"\",\n\n\"designation\":\"QA Guy\",\n\n\"department\":\"Tech\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" company_id and nid info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"5867331339\",\n\"company_id\": \"\",\n\"iso_code\": \"US\",\n\"first_name\":\"Aleaha2\",\n\"last_name\":\"khan\",\n\"nid\":\"\",\n\"designation\":\"QA Guy\",\n\"department\":\"Tech\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"company_id must be non-empty\"\n        \"nid must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"phone_number must be non-empty\"\n        \"nid must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -20 Register app users without company _id and designation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fbd6b111-568d-453a-b6b3-a1f7fb040688",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"company_id must be non-empty\",",
									"                \"designation must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"company_id must be non-empty\",",
									"                    \"designation must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"company_id must be non-empty\",",
									"                            \"designation must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"5867331339\",\n\n\"company_id\": \"\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Aleaha2\",\n\n\"last_name\":\"khan\",\n\n\"nid\":\"9874628364729374\",\n\n\"designation\":\"\",\n\n\"department\":\"Tech\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" company_id and designation info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"5867331339\",\n\"company_id\": \"\",\n\"iso_code\": \"US\",\n\"first_name\":\"Aleaha2\",\n\"last_name\":\"khan\",\n\"nid\":\"9874628364729374\",\n\"designation\":\"\",\n\"department\":\"Tech\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"company_id must be non-empty\"\n        \"designation must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"phone_number must be non-empty\"\n        \"designation must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -21 Register app users without company_ id and department",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5f196de3-9405-44ee-a723-e8ee79c7e23a",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"company_id must be non-empty\",",
									"                \"department must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"company_id must be non-empty\",",
									"                    \"department must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"company_id must be non-empty\",",
									"                            \"department must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"5867331339\",\n\n\"company_id\": \"\",\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Aleaha2\",\n\n\"last_name\":\"khan\",\n\n\"nid\":\"9874628364729374\",\n\n\"designation\":\"QA Guy\",\n\n\"department\":\"\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" company_id and department info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"5867331339\",\n\"company_id\": \"\",\n\"iso_code\": \"US\",\n\"first_name\":\"Aleaha2\",\n\"last_name\":\"khan\",\n\"nid\":\"9874628364729374\",\n\"designation\":\"QA Guy\",\n\"department\":\"\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"company_id must be non-empty\"\n        \"department must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"phone_number must be non-empty\"\n        \"department must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -22 Register app users without iso _code and firstname",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fdbe8a6e-d2aa-4c4f-a536-b4d0e5b0c093",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"iso_code must be non-empty\",",
									"                \"first_name must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"iso_code must be non-empty\",",
									"                    \"first_name must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"iso_code must be non-empty\",",
									"                            \"first_name must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"5867331339\",\n\n\"company_id\": 179,\n\n\"iso_code\": \"\",\n\n\"first_name\":\"\",\n\n\"last_name\":\"khan\",\n\n\"nid\":\"9874628364729374\",\n\n\"designation\":\"QA Guy\",\n\n\"department\":\"Tech\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" iso_code and firstname info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"5867331339\",\n\"company_id\": 179,\n\"iso_code\": \"\",\n\"first_name\":\"\",\n\"last_name\":\"khan\",\n\"nid\":\"9874628364729374\",\n\"designation\":\"QA Guy\",\n\"department\":\"Tech\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"iso_code must be non-empty\"\n        \"firstname must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"iso_code must be non-empty\"\n        \"firstname must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -23 Register app users without iso_code and lastname",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0e48d8d4-187a-4538-92de-690aafefd0ee",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"iso_code must be non-empty\",",
									"                \"last_name must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"iso_code must be non-empty\",",
									"                    \"last_name must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"iso_code must be non-empty\",",
									"                            \"last_name must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"5867331339\",\n\n\"company_id\": 179,\n\n\"iso_code\": \"\",\n\n\"first_name\":\"Aleaha2\",\n\n\"last_name\":\"\",\n\n\"nid\":\"9874628364729374\",\n\n\"designation\":\"QA Guy\",\n\n\"department\":\"Tech\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" iso_code and lastname info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"5867331339\",\n\"company_id\": 179,\n\"iso_code\": \"\",\n\"first_name\":\"Aleaha2\",\n\"last_name\":\"\",\n\"nid\":\"9874628364729374\",\n\"designation\":\"QA Guy\",\n\"department\":\"Tech\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"iso_code must be non-empty\"\n        \"lastname must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"iso_code must be non-empty\"\n        \"lastname must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -24 Register app users without iso_ code and nid",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "78789124-3024-482c-ad37-1e69dca0f7f1",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"iso_code must be non-empty\",",
									"                \"nid must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"iso_code must be non-empty\",",
									"                    \"nid must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"iso_code must be non-empty\",",
									"                            \"nid must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"5867331339\",\n\n\"company_id\": 179,\n\n\"iso_code\": \"\",\n\n\"first_name\":\"Aleaha2\",\n\n\"last_name\":\"khan\",\n\n\"nid\":\"\",\n\n\"designation\":\"QA Guy\",\n\n\"department\":\"Tech\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" iso_code and nid info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"5867331339\",\n\"company_id\": 179,\n\"iso_code\": \"\",\n\"first_name\":\"Aleaha2\",\n\"last_name\":\"khan\",\n\"nid\":\"\",\n\"designation\":\"QA Guy\",\n\"department\":\"Tech\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"iso_code must be non-empty\"\n        \"nid must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"iso_code must be non-empty\"\n        \"nid must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -25 Register app users without iso code and designation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1fe63b85-ee4c-4f5b-b8d5-9f008e89f7c6",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"iso_code must be non-empty\",",
									"                \"designation must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"iso_code must be non-empty\",",
									"                    \"designation must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"iso_code must be non-empty\",",
									"                            \"designation must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"5867331339\",\n\n\"company_id\": 179,\n\n\"iso_code\": \"\",\n\n\"first_name\":\"Aleaha2\",\n\n\"last_name\":\"khan\",\n\n\"nid\":\"9874628364729374\",\n\n\"designation\":\"\",\n\n\"department\":\"Tech\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" iso_code and designation info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"5867331339\",\n\"company_id\": 179,\n\"iso_code\": \"\",\n\"first_name\":\"Aleaha2\",\n\"last_name\":\"khan\",\n\"nid\":\"9874628364729374\",\n\"designation\":\"\",\n\"department\":\"Tech\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"iso_code must be non-empty\"\n        \"designation must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"iso_code must be non-empty\"\n        \"designation must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -26 Register app users without iso_ code and department",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "833b6795-bf74-4020-950c-fbfcd61ed360",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"iso_code must be non-empty\",",
									"                \"department must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"iso_code must be non-empty\",",
									"                    \"department must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"iso_code must be non-empty\",",
									"                            \"department must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"5867331339\",\n\n\"company_id\": 179,\n\n\"iso_code\": \"\",\n\n\"first_name\":\"Aleaha2\",\n\n\"last_name\":\"khan\",\n\n\"nid\":\"9874628364729374\",\n\n\"designation\":\"QA Guy\",\n\n\"department\":\"\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" iso_code and department info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"5867331339\",\n\"company_id\": 179,\n\"iso_code\": \"\",\n\"first_name\":\"Aleaha2\",\n\"last_name\":\"khan\",\n\"nid\":\"9874628364729374\",\n\"designation\":\"QA Guy\",\n\"department\":\"\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"iso_code must be non-empty\"\n        \"department must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"iso_code must be non-empty\"\n        \"department must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -27 Register app users without firstname and lastname",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c785cd64-ad35-44c6-be8b-a00c025c5ff2",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"first_name must be non-empty\",",
									"                \"last_name must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"first_name must be non-empty\",",
									"                    \"last_name must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"first_name must be non-empty\",",
									"                            \"last_name must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"5867331339\",\n\n\"company_id\": 179,\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"\",\n\n\"last_name\":\"\",\n\n\"nid\":\"9874628364729374\",\n\n\"designation\":\"QA Guy\",\n\n\"department\":\"Tech\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" firstname and lastname info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"5867331339\",\n\"company_id\": 179,\n\"iso_code\": \"US\",\n\"first_name\":\"\",\n\"last_name\":\"\",\n\"nid\":\"9874628364729374\",\n\"designation\":\"QA Guy\",\n\"department\":\"Tech\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"firstname must be non-empty\"\n        \"lastname must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"firstname must be non-empty\"\n        \"laststname must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -28 Register app users without firstname and nid",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9a0f55d4-b377-4b79-a32a-14c7fa61433c",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"first_name must be non-empty\",",
									"                \"nid must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"first_name must be non-empty\",",
									"                    \"nid must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"first_name must be non-empty\",",
									"                            \"nid must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"5867331339\",\n\n\"company_id\": 179,\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"\",\n\n\"last_name\":\"khan\",\n\n\"nid\":\"\",\n\n\"designation\":\"QA Guy\",\n\n\"department\":\"Tech\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" firstname and nid info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"5867331339\",\n\"company_id\": 179,\n\"iso_code\": \"US\",\n\"first_name\":\"\",\n\"last_name\":\"khan\",\n\"nid\":\"\",\n\"designation\":\"QA Guy\",\n\"department\":\"Tech\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"firstname must be non-empty\"\n        \"nid must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"firstname must be non-empty\"\n        \"nid must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -29 Register app users without firstname and designation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "34d34a50-960e-4c5b-8f79-9b4536e7d03d",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"first_name must be non-empty\",",
									"                \"designation must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"first_name must be non-empty\",",
									"                    \"designation must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"first_name must be non-empty\",",
									"                            \"designation must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"5867331339\",\n\n\"company_id\": 179,\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"\",\n\n\"last_name\":\"khan\",\n\n\"nid\":\"9874628364729374\",\n\n\"designation\":\"\",\n\n\"department\":\"Tech\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" firstname and designation info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"5867331339\",\n\"company_id\": 179,\n\"iso_code\": \"US\",\n\"first_name\":\"\",\n\"last_name\":\"khan\",\n\"nid\":\"9874628364729374\",\n\"designation\":\"\",\n\"department\":\"Tech\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"firstname must be non-empty\"\n        \"designation must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"firstname must be non-empty\"\n        \"designation must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -30 Register app users without firstname and department",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1bc636fd-244b-4c39-bbab-29e05b1c0049",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"first_name must be non-empty\",",
									"                \"department must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"first_name must be non-empty\",",
									"                    \"department must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"first_name must be non-empty\",",
									"                            \"department must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"5867331339\",\n\n\"company_id\": 179,\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"\",\n\n\"last_name\":\"khan\",\n\n\"nid\":\"9874628364729374\",\n\n\"designation\":\"QA Guy\",\n\n\"department\":\"\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" firstname and department info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"5867331339\",\n\"company_id\": 179,\n\"iso_code\": \"US\",\n\"first_name\":\"\",\n\"last_name\":\"khan\",\n\"nid\":\"9874628364729374\",\n\"designation\":\"QA Guy\",\n\"department\":\"\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"firstname must be non-empty\"\n        \"department must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"firstname must be non-empty\"\n        \"department must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -31 Register app users without lastname and nid",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e5115a36-864f-4cf1-b948-af811cf60394",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"last_name must be non-empty\",",
									"                \"nid must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"last_name must be non-empty\",",
									"                    \"nid must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"last_name must be non-empty\",",
									"                            \"nid must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"5867331339\",\n\n\"company_id\": 179,\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Aleaha2\",\n\n\"last_name\":\"\",\n\n\"nid\":\"\",\n\n\"designation\":\"QA Guy\",\n\n\"department\":\"Tech\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" lastname and nid info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"5867331339\",\n\"company_id\": 179,\n\"iso_code\": \"US\",\n\"first_name\":\"Aleaha2\",\n\"last_name\":\"\",\n\"nid\":\"\",\n\"designation\":\"QA Guy\",\n\"department\":\"Tech\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"lastname must be non-empty\"\n        \"nid must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"lastname must be non-empty\"\n        \"nid must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -32 Register app users without lastname and designation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2001e833-e47d-4ede-8449-28c75ceaaa6a",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"last_name must be non-empty\",",
									"                \"designation must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"last_name must be non-empty\",",
									"                    \"designation must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"last_name must be non-empty\",",
									"                            \"designation must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"5867331339\",\n\n\"company_id\": 179,\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Aleaha2\",\n\n\"last_name\":\"\",\n\n\"nid\":\"9874628364729374\",\n\n\"designation\":\"\",\n\n\"department\":\"Tech\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" lastname and designation info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"5867331339\",\n\"company_id\": 179,\n\"iso_code\": \"US\",\n\"first_name\":\"Aleaha2\",\n\"last_name\":\"\",\n\"nid\":\"9874628364729374\",\n\"designation\":\"\",\n\"department\":\"Tech\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"lastname must be non-empty\"\n        \"designation must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"lastname must be non-empty\"\n        \"designation must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -33 Register app users without lastname and department",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "05831e78-2891-4d69-ac02-36a545e22aa1",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"last_name must be non-empty\",",
									"                \"department must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"last_name must be non-empty\",",
									"                    \"department must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"last_name must be non-empty\",",
									"                            \"department must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"5867331339\",\n\n\"company_id\": 179,\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Aleaha2\",\n\n\"last_name\":\"\",\n\n\"nid\":\"9874628364729374\",\n\n\"designation\":\"QA Guy\",\n\n\"department\":\"\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" lastname and department info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"5867331339\",\n\"company_id\": 179,\n\"iso_code\": \"US\",\n\"first_name\":\"Aleaha2\",\n\"last_name\":\"\",\n\"nid\":\"9874628364729374\",\n\"designation\":\"QA Guy\",\n\"department\":\"\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"lastname must be non-empty\"\n        \"department must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"lastname must be non-empty\"\n        \"department must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -34 Register app users without nid and designation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "76655430-9dda-46b2-b4d7-6805f87bf264",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"nid must be non-empty\",",
									"                \"designation must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"nid must be non-empty\",",
									"                    \"designation must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"nid must be non-empty\",",
									"                            \"designation must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"5867331339\",\n\n\"company_id\": 179,\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Aleaha2\",\n\n\"last_name\":\"khan\",\n\n\"nid\":\"\",\n\n\"designation\":\"\",\n\n\"department\":\"Tech\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" nid and designation info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"5867331339\",\n\"company_id\": 179,\n\"iso_code\": \"US\",\n\"first_name\":\"Aleaha2\",\n\"last_name\":\"khan\",\n\"nid\":\"\",\n\"designation\":\"\",\n\"department\":\"Tech\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"nid must be non-empty\"\n        \"designation must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"nid must be non-empty\"\n        \"designation must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -35 Register app users without nid and department",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "64dd7ed4-81d5-47d7-8148-8e7867585d50",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"nid must be non-empty\",",
									"                \"department must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"nid must be non-empty\",",
									"                    \"department must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"nid must be non-empty\",",
									"                            \"department must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"5867331339\",\n\n\"company_id\": 179,\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Aleaha2\",\n\n\"last_name\":\"khan\",\n\n\"nid\":\"\",\n\n\"designation\":\"QA Guy\",\n\n\"department\":\"\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" nid and department info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"5867331339\",\n\"company_id\": 179,\n\"iso_code\": \"US\",\n\"first_name\":\"Aleaha2\",\n\"last_name\":\"khan\",\n\"nid\":\"\",\n\"designation\":\"QA Guy\",\n\"department\":\"\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"nid must be non-empty\"\n        \"department must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"nid must be non-empty\"\n        \"department must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				},
				{
					"name": "FFME2-14 -36 Register app users without designation and department",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f2f81878-9932-42ca-bb4e-10adb130f620",
								"exec": [
									"// Validate statues code ",
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"// validate response time ",
									"pm.test(\"Response time is less than 600ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(600);",
									"});",
									"",
									"//create variable for json Data",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"var schema ={",
									"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
									"    \"$id\": \"http://example.com/example.json\",",
									"    \"type\": \"object\",",
									"    \"title\": \"The root schema\",",
									"    \"description\": \"The root schema comprises the entire JSON document.\",",
									"    \"default\": {},",
									"    \"examples\": [",
									"        {",
									"            \"message\": [",
									"                \"designation must be non-empty\",",
									"                \"department must be non-empty\"",
									"            ],",
									"            \"status\": \"failed\"",
									"        }",
									"    ],",
									"    \"required\": [",
									"        \"message\",",
									"        \"status\"",
									"    ],",
									"    \"properties\": {",
									"        \"message\": {",
									"            \"$id\": \"#/properties/message\",",
									"            \"type\": \"array\",",
									"            \"title\": \"The message schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": [],",
									"            \"examples\": [",
									"                [",
									"                    \"designation must be non-empty\",",
									"                    \"department must be non-empty\"",
									"                ]",
									"            ],",
									"            \"additionalItems\": true,",
									"            \"items\": {",
									"                \"$id\": \"#/properties/message/items\",",
									"                \"anyOf\": [",
									"                    {",
									"                        \"$id\": \"#/properties/message/items/anyOf/0\",",
									"                        \"type\": \"string\",",
									"                        \"title\": \"The first anyOf schema\",",
									"                        \"description\": \"An explanation about the purpose of this instance.\",",
									"                        \"default\": \"\",",
									"                        \"examples\": [",
									"                            \"designation must be non-empty\",",
									"                            \"department must be non-empty\"",
									"                        ]",
									"                    }",
									"                ]",
									"            }",
									"        },",
									"        \"status\": {",
									"            \"$id\": \"#/properties/status\",",
									"            \"type\": \"string\",",
									"            \"title\": \"The status schema\",",
									"            \"description\": \"An explanation about the purpose of this instance.\",",
									"            \"default\": \"\",",
									"            \"examples\": [",
									"                \"failed\"",
									"            ]",
									"        }",
									"    },",
									"    \"additionalProperties\": true",
									"}",
									"//Validate Schema for this URL",
									"tests[\"valid schema\"] = tv4.validate(jsonData, schema);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\n\"phone_number\": \"5867331339\",\n\n\"company_id\": 179,\n\n\"iso_code\": \"US\",\n\n\"first_name\":\"Aleaha2\",\n\n\"last_name\":\"khan\",\n\n\"nid\":\"9874628364729374\",\n\n\"designation\":\"\",\n\n\"department\":\"\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/field-force/auth/register-user",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"field-force",
								"auth",
								"register-user"
							]
						},
						"description": "Objective: Test is to identify invalid result to leave \"empty\" designation and department info.\n\nSE: Shiblu Ahmed \nPO: Pranto Majumder\nQA: Aleaha Khan\nReviewer: Pranto Majumder \n\nTest steps: Test steps includes the following as a json forman in body\nMethod: POST \n{\n\"phone_number\": \"5867331339\",\n\"company_id\": 179,\n\"iso_code\": \"US\",\n\"first_name\":\"Aleaha2\",\n\"last_name\":\"khan\",\n\"nid\":\"9874628364729374\",\n\"designation\":\"\",\n\"department\":\"\"\n}\n\nExpected Result: \n{\n    \"message\": [\n        \"designation must be non-empty\"\n        \"department must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nActual Result:\n{\n    \"message\": [\n        \"designation must be non-empty\"\n        \"department must be non-empty\"\n    ],\n    \"status\": \"failed\"\n}\n\nStatues code: 403 FORBIDDEN\nTest Result: Pass"
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "f6b541a1-0482-49f9-a057-5965519f9ecf",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "e9542d23-d2ed-4f5c-bb1d-182594018623",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "9d4004fe-f2e4-40b5-994c-a9a9c41f5af2",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "f1a8f271-5bfb-4297-b042-df65fa6b7d6a",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}